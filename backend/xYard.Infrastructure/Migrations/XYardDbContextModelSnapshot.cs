// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using xYard.Infrastructure.Db;

#nullable disable

namespace xYard.Infrastructure.Migrations
{
    [DbContext(typeof(XYardDbContext))]
    partial class XYardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("xYard.Domain.Entities.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<int>("Xmm")
                        .HasColumnType("integer");

                    b.Property<int>("Ymm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("xYard.Domain.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromPointId")
                        .HasColumnType("integer");

                    b.Property<int>("ToPointId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromPointId");

                    b.HasIndex("ToPointId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("xYard.Domain.Entities.Route", b =>
                {
                    b.HasOne("xYard.Domain.Entities.Point", "FromPoint")
                        .WithMany("RoutesFromHere")
                        .HasForeignKey("FromPointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("xYard.Domain.Entities.Point", "ToPoint")
                        .WithMany()
                        .HasForeignKey("ToPointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromPoint");

                    b.Navigation("ToPoint");
                });

            modelBuilder.Entity("xYard.Domain.Entities.Point", b =>
                {
                    b.Navigation("RoutesFromHere");
                });
#pragma warning restore 612, 618
        }
    }
}
